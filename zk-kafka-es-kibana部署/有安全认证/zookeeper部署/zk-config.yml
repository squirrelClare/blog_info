apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-config
  namespace: kafka
  labels:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/component: zookeeper
data:
  init-certs.sh: |-
    #!/bin/bash
  setup.sh: |-
    #!/bin/bash
    if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
        export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
    else
        HOSTNAME="$(hostname -s)"
        if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
            ORD=${BASH_REMATCH[2]}
            export ZOO_SERVER_ID="$((ORD + 1 ))"
        else
            echo "Failed to get index from hostname $HOST"
            exit 1
        fi
    fi
    exec /entrypoint.sh /run.sh
  zoo.cfg: |-
    #This file was autogenerated DO NOT EDIT
    clientPort=2181
    dataDir=/var/lib/zookeeper/data
    dataLogDir=/var/lib/zookeeper/data/log
    tickTime=2000
    initLimit=10
    syncLimit=5
    maxClientCnxns=100
    minSessionTimeout=4000
    maxSessionTimeout=40000
    autopurge.snapRetainCount=3
    autopurge.purgeInteval=12
    server.1=zookeeper-0.zookeeper-hs.kafka.svc.cluster.local:2888:3888
    server.2=zookeeper-1.zookeeper-hs.kafka.svc.cluster.local:2888:3888
    server.3=zookeeper-2.zookeeper-hs.kafka.svc.cluster.local:2888:3888
    # 开启认证
    authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    requireClientAuthScheme=sasl
    jaasLoginRenew=3600000
  jass.conf: |-
    Server {
      org.apache.zookeeper.server.auth.DigestLoginModule required
      username="kafka"
      password="kafka"
      user_admin="admin"
      user_kafka="kafka";
    };
  java.env: |-
    ZOO_LOG_DIR=/var/log/zookeeper
    JVMFLAGS="-Xmx512M -Xms512M"
    SERVER_JVMFLAGS="-Djava.security.auth.login.config=/opt/zookeeper/conf/jaas.conf"
    CLIENT_JVMFLAGS="${CLIENT_JVMFLAGS} -Djava.security.auth.login.config=/opt/zookeeper/conf/jaas.conf"
